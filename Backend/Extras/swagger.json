{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "API Documentation ImmoLink",
      "description": "Restfull webservice Application",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "basePath": "/api",
    "tags": [
      
    ],
    "produces": ["application/json"],
    "paths": {
      "/post/posts/all": {
        "get": {
          "tags": [" Get Posts "],
          "summary": " Get all Posts ",
          "responses": {
            "200": {
              "description": " OK "
            },
            "403":{
              "description":" NO POSTS FOUND ! "
            },
            "500":{
              "description":" ERROR "
            }
          }
        }
      },
      "/post/create": {
        "post": {
          "tags": ["Create Posts"],
          "summary": " Create new Post",
          "parameters": [
            {
              "name": "auth_token",
              "in": "headers",
              "required": true,
              "description": " Auth token to do this action"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "403":{
              "description":"Token not valid !"
            },
            "401":{
              "description":"You are not authenticated!"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/post/update": {
        "put": {
          "tags": ["Update Posts"],
          "summary": "Update post ",
          "parameters": [
            {
              "name": "auth_token",
              "in": "headers",
              "required": true,
              "description": " Auth token to do this action",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/post/delete": {
        "delete": {
          "tags": ["Delete Posts"],
          "summary": "Delete Post by id ",
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/post/postbyuser/{userid}": {
        "get": {
          "tags": ["Post By User"],
          "summary": "Get post by user",
          "parameters":[
            {
              "name": "userid",
              "in": "path",
              "required": true,
              "description": "Id of the user",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/post/get/{postid}": {
        "get": {
          "tags": ["Post By Id"],
          "summary": "Get post by Id",
          "parameters":[
            {
              "name": "postid",
              "in": "path",
              "required": true,
              "description": "Id of the post",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/post/findpost": {
        "get": {
          "tags": ["Find Posts"],
          "summary": "Get post by id : to see more info from the client side",
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/post/login": {
        "post": {
          "tags": ["User Login"],
          "summary": "User Auth Routes : Rgister new User",
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      },
      "/user/register": {
        "post": {
          "tags": ["User Register"],
          "summary": "User Auth Routes : Rgister new User",
          "properties": {
            "id": {
              "type": "integer",
              "uniqueItems": true
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }},
          "responses": {
            "200": {
              "description": "ok"
            },
            "403":{
              "description":"no posts found  !"
            },
            "500":{
              "description":"error"
            }
          }
        }
      }
      
    }
  }
  